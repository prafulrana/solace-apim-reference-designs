{
	"info": {
		"_postman_id": "756ad4ac-bb6f-47b6-b120-fe09738a3e59",
		"name": "Solace-APIM-UC-Elevator-Co",
		"description": "Solace Platform API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "management",
			"item": [
				{
					"name": "create Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{org}}\",\n    \"cloud-token\": \"{{solaceCloudApiToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "create dev env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{devEnv_name}}\",\n  \"description\": \"development environment\",\n  \"serviceId\": \"{{devEnv_serviceId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/environments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"environments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "publisher",
			"item": [
				{
					"name": "Create api: alarms-and-faults",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{alarmsAndFaultsApiSpec}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apis/alarms-and-faults",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apis",
								"alarms-and-faults"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create api: usage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{usageApiSpec}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apis/usage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apis",
								"usage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create api: maintenance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{maintenanceApiSpec}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apis/maintenance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apis",
								"maintenance"
							]
						}
					},
					"response": []
				},
				{
					"name": "create product: alarms&faults",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apis\": [\n        \"alarms-and-faults\"\n    ],\n    \"approvalType\": \"manual\",\n    \"attributes\": [\n        {\n            \"name\": \"resource_org_id\",\n            \"value\": \"hilton, marriott\"\n        },\n        {\n            \"name\": \"resource_region_id\",\n            \"value\": \"fr, de\"\n        },\n        {\n            \"name\": \"resource_sub_region_id\",\n            \"value\": \"paris, munich\"\n        },\n        {\n            \"name\": \"resource_site_id\",\n            \"value\": \"opera, city, bahnhof\"\n        },\n        {\n            \"name\": \"resource_type\",\n            \"value\": \"elev-make1, elev-make2\"\n        }\n    ],\n    \"description\": \"elevator alarms and faults\",\n    \"displayName\": \"Elevator Alarm & Faults\",\n    \"environments\": [\n        \"{{devEnv_name}}\"\n    ],\n    \"name\": \"elevator-alarms-and-faults\",\n    \"pubResources\": [],\n    \"subResources\": [],\n    \"protocols\": [\n        {\n            \"name\": \"mqtt\",\n            \"version\": \"3.1.1\"\n        },\n        {\n            \"name\": \"http\",\n            \"version\": \"1.1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apiProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apiProducts"
							]
						}
					},
					"response": []
				},
				{
					"name": "create product: usage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apis\": [\n        \"usage\"\n    ],\n    \"approvalType\": \"auto\",\n    \"attributes\": [\n        {\n            \"name\": \"resource_org_id\",\n            \"value\": \"hilton, marriott\"\n        },\n        {\n            \"name\": \"resource_region_id\",\n            \"value\": \"fr, de\"\n        },\n        {\n            \"name\": \"resource_sub_region_id\",\n            \"value\": \"paris, munich\"\n        },\n        {\n            \"name\": \"resource_site_id\",\n            \"value\": \"opera, city, bahnhof\"\n        },\n        {\n            \"name\": \"resource_type\",\n            \"value\": \"elev-make1, elev-make2\"\n        }\n    ],\n    \"description\": \"elevator usage data\",\n    \"displayName\": \"Elevator Usage Data\",\n    \"environments\": [\n        \"{{devEnv_name}}\"\n    ],\n    \"name\": \"elevator-usage\",\n    \"pubResources\": [],\n    \"subResources\": [],\n    \"protocols\": [\n        {\n            \"name\": \"mqtt\",\n            \"version\": \"3.1.1\"\n        },\n                {\n            \"name\": \"http\",\n            \"version\": \"1.1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apiProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apiProducts"
							]
						}
					},
					"response": []
				},
				{
					"name": "create product: maintenance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apis\": [\n        \"maintenance\"\n    ],\n    \"approvalType\": \"manual\",\n    \"attributes\": [\n        {\n            \"name\": \"resource_org_id\",\n            \"value\": \"hilton, marriott\"\n        },\n        {\n            \"name\": \"resource_region_id\",\n            \"value\": \"fr, de\"\n        },\n        {\n            \"name\": \"resource_sub_region_id\",\n            \"value\": \"paris, munich\"\n        },\n        {\n            \"name\": \"resource_site_id\",\n            \"value\": \"opera, city, bahnhof\"\n        },\n        {\n            \"name\": \"resource_type\",\n            \"value\": \"elev-make1, elev-make2\"\n        }\n    ],\n    \"description\": \"elevator maintenance alerts\",\n    \"displayName\": \"Elevator Maintenance Alerts\",\n    \"environments\": [\n        \"{{devEnv_name}}\"\n    ],\n    \"name\": \"elevator-maintenance\",\n    \"pubResources\": [],\n    \"subResources\": [],\n    \"protocols\": [\n        {\n            \"name\": \"mqtt\",\n            \"version\": \"3.1.1\"\n        },\n                {\n            \"name\": \"http\",\n            \"version\": \"1.1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apiProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apiProducts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "consumer-create-apps",
			"item": [
				{
					"name": "create developer-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"dev-1@service-co.com\",\n    \"firstName\": \"Dev-1\",\n    \"lastName\": \"Developer-1\",\n    \"userName\": \"dev-1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers"
							]
						}
					},
					"response": []
				},
				{
					"name": "create developer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"dev-2@service-co.com\",\n    \"firstName\": \"Dev-2\",\n    \"lastName\": \"Developer-2\",\n    \"userName\": \"dev-2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers"
							]
						}
					},
					"response": []
				},
				{
					"name": "create app for dev-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiProducts\": [\n        \"elevator-alarms-and-faults\",\n        \"elevator-maintenance\"\n    ],\n    \"name\": \"dev-1-elevator-alarms-and-faults-maintenance\",\n    \"expiresIn\": -1,\n    \"credentials\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-1/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-1",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "create app for dev-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiProducts\": [\n        \"elevator-usage\"\n    ],\n    \"name\": \"dev-2-elevator-usage\",\n    \"expiresIn\": -1,\n    \"credentials\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-2/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-2",
								"apps"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "approver",
			"item": [
				{
					"name": "approve dev-1 app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attributes\": [\n        {\n            \"name\": \"resource_org_id\",\n            \"value\": \"hilton\"\n        },\n        {\n            \"name\": \"resource_region_id\",\n            \"value\": \"de\"\n        },\n        {\n            \"name\": \"resource_sub_region_id\",\n            \"value\": \"munich, cologne\"\n        }\n    ],\n    \"status\": \"approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-1/apps/dev-1-elevator-alarms-and-faults-maintenance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-1",
								"apps",
								"dev-1-elevator-alarms-and-faults-maintenance"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "consumer-use-apps",
			"item": [
				{
					"name": "app details: dev-1-elevator-alarms-and-faults-maintenance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiProducts\": [\n        \"elevator-usage\"\n    ],\n    \"name\": \"dev-2-elevator-usage\",\n    \"expiresIn\": -1,\n    \"credentials\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-1/apps/dev-1-elevator-alarms-and-faults-maintenance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-1",
								"apps",
								"dev-1-elevator-alarms-and-faults-maintenance"
							]
						}
					},
					"response": []
				},
				{
					"name": "app details: dev-2-elevator-usage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiProducts\": [\n        \"elevator-usage\"\n    ],\n    \"name\": \"dev-2-elevator-usage\",\n    \"expiresIn\": -1,\n    \"credentials\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-2/apps/dev-2-elevator-usage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-2",
								"apps",
								"dev-2-elevator-usage"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "consumer-update-apps-webhook",
			"item": [
				{
					"name": "app for dev-1 with webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webHook\": {\n      \"uri\": \"https://apim-rdp-func-rjgu-fa.azurewebsites.net:443/api/solace-rdp-2-blob?code=lW3fk0vNawEBaGa90/0uJ1AADwzr4KVAMTgqXDaBaB8EOt0zYOOD6w==&path=dev-1&pathCompose=withTime\",\n      \"method\": \"POST\",\n      \"mode\": \"serial\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-1/apps/dev-1-elevator-alarms-and-faults-maintenance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-1",
								"apps",
								"dev-1-elevator-alarms-and-faults-maintenance"
							]
						}
					},
					"response": []
				},
				{
					"name": "app for dev-2 with webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webHook\": {\n      \"uri\": \"https://apim-rdp-func-rjgu-fa.azurewebsites.net:443/api/solace-rdp-2-blob?code=lW3fk0vNawEBaGa90/0uJ1AADwzr4KVAMTgqXDaBaB8EOt0zYOOD6w==&path=dev-2&pathCompose=withTime\",\n      \"method\": \"POST\",\n      \"mode\": \"parallel\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-2/apps/dev-2-elevator-usage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-2",
								"apps",
								"dev-2-elevator-usage"
							]
						}
					},
					"response": []
				},
				{
					"name": "app for dev-2 with webhook too long",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webHook\": {\n      \"uri\": \"https://apim-rdp-func-rjgu-fa.azurewebsites.net:443/api/solace-rdp-2-blob?code=this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long-this-is-too-long==&path=dev-2&pathCompose=withTime\",\n      \"method\": \"POST\",\n      \"mode\": \"parallel\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-2/apps/dev-2-elevator-usage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-2",
								"apps",
								"dev-2-elevator-usage"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "helpers",
			"item": [
				{
					"name": "delete Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations/{{org}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{org}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations/{{org}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{org}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "apiProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{org}}/apiProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"apiProducts"
							]
						}
					},
					"response": []
				},
				{
					"name": "apps for dev-1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{org}}/developers/dev-1/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"developers",
								"dev-1",
								"apps"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EventPortal",
			"item": [
				{
					"name": "GET api-spec: usage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"ep_usageApiSpec\", responseBody)",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{org}}/event-portal/apis/usage/spec",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"event-portal",
								"apis",
								"usage",
								"spec"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET api-spec: alarms-and-faults",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"postman.setEnvironmentVariable(\"ep_alarmsAndFaultsApiSpec\", responseBody)",
									"// console.log('responseBody =' + responseBody)",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/yaml",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{org}}/event-portal/apis/alarms-and-faults/spec",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"event-portal",
								"apis",
								"alarms-and-faults",
								"spec"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET api-spec: maintenance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"postman.setEnvironmentVariable(\"ep_maintenanceApiSpec\", responseBody)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{org}}/event-portal/apis/maintenance/spec",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{org}}",
								"event-portal",
								"apis",
								"maintenance",
								"spec"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Waiting2bImplemented",
			"item": [
				{
					"name": "todo: get a list of apps that need approval",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{solace-apim-api-password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{solace-apim-api-user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "alarmsAndFaultsApiSpec",
			"value": "components:\n  schemas:\n    fault:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co fault event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              description: >-\n                the time the fault was generated by the asset - includes the\n                timezone\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - type\n            - description\n            - code\n            - details\n          properties:\n            component_id:\n              title: component_id the fault refers to\n              type: string\n            code:\n              title: alarm code\n              type: integer\n            description:\n              title: human readable fault description\n              type: string\n            details:\n              anyOf:\n                - additionalProperties: false\n                  title: details for type=light\n                  type: object\n                  required:\n                    - actual_lux\n                    - expected_lux\n                    - discrepancy_pct\n                  properties:\n                    expected_lux:\n                      type: integer\n                    discrepancy_pct:\n                      type: integer\n                    actual_lux:\n                      type: integer\n                - additionalProperties: false\n                  title: details for type=phone\n                  type: object\n                  required:\n                    - num_tests_failed\n                  properties:\n                    num_tests_failed:\n                      type: integer\n              title: alarm or fault details\n              type: object\n            type:\n              title: the type of alarm\n              type: string\n              enum:\n                - light\n                - phone\n      $id: 'http://eventportal.solace.cloud/apim/elevator-co/alarm.json'\n    critical-alarm:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co critical alarm event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              description: >-\n                the time the alarm was generated by the asset - includes the\n                timezone\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - type\n            - description\n            - code\n            - details\n          properties:\n            code:\n              title: alarm code\n              type: integer\n            description:\n              title: human readable alarm description\n              type: string\n            details:\n              anyOf:\n                - additionalProperties: false\n                  title: details for type=car2floor_alignment\n                  type: object\n                  required:\n                    - floor\n                    - discrepancy_mm\n                  properties:\n                    discrepancy_mm:\n                      type: integer\n                    floor:\n                      type: integer\n                - additionalProperties: false\n                  title: details for type=max_weight_exceeded\n                  type: object\n                  required:\n                    - max_weight_kg\n                    - actual_weight_kg\n                  properties:\n                    actual_weight_kg:\n                      type: integer\n                    max_weight_kg:\n                      type: integer\n              title: alarm or fault details\n              type: object\n            type:\n              title: the type of alarm\n              type: string\n              enum:\n                - car2floor_alignment\n                - max_weight_exceeded\n      $id: 'http://eventportal.solace.cloud/apim/elevator-co/alarm.json'\n  messages:\n    fault:\n      payload:\n        $ref: '#/components/schemas/fault'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n    critical-alarm:\n      payload:\n        $ref: '#/components/schemas/critical-alarm'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n  parameters:\n    topic_elem:\n      schema:\n        type: string\nchannels:\n  'apim/elevator-co/data-product/V1/json/elevator/critical-alarm/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0\n      message:\n        $ref: '#/components/messages/critical-alarm'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\n  'apim/elevator-co/data-product/V1/json/elevator/fault/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0\n      message:\n        $ref: '#/components/messages/fault'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\nasyncapi: 2.0.0\ninfo:\n  x-application-class: unspecified\n  title: alarms-and-faults\n  x-view: provider\n  version: 0.0.1\n"
		},
		{
			"key": "maintenanceApiSpec",
			"value": "components:\n  schemas:\n    maintenance:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co maintenance event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - component_id\n            - description\n            - timewindow_days\n            - details\n          properties:\n            component_id:\n              title: component_id that needs maintenance\n              type: string\n            timewindow_days:\n              title: maintenance time window in days\n              type: integer\n            description:\n              title: maintenance description\n              type: string\n            details:\n              title: maintenance details\n              type: object\n            probability_of_failure_pct:\n              title: probability of fault / urgency of maintenace in %\n              type: integer\n      $id: >-\n        http://eventportal.solace.cloud/apim/elevator-co/maintenance/maintenance.json\n  messages:\n    maintenance:\n      payload:\n        $ref: '#/components/schemas/maintenance'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n  parameters:\n    topic_elem:\n      schema:\n        type: string\nchannels:\n  'apim/elevator-co/data-product/V1/json/elevator/maintenance/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0      \n      message:\n        $ref: '#/components/messages/maintenance'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\nasyncapi: 2.0.0\ninfo:\n  x-application-class: unspecified\n  title: maintenance\n  x-view: provider\n  version: 0.0.1\n"
		},
		{
			"key": "usageApiSpec",
			"value": "components:\n  schemas:\n    call-wait:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co call elevator wait time event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - floor\n            - wait_min\n          properties:\n            floor:\n              type: integer\n            wait_min:\n              type: integer\n      $id: 'http://eventportal.solace.cloud/apim/elevator-co/usage/call-wait.json'\n    journey:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co journey event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - type\n            - from_floor\n            - to_floor\n          properties:\n            to_floor:\n              type: integer\n            from_floor:\n              type: integer\n            type:\n              title: the type of journey\n              type: string\n              enum:\n                - up\n                - down\n      $id: 'http://eventportal.solace.cloud/apim/elevator-co/usage/journey.json'\n    info-screen:\n      $schema: 'http://json-schema.org/draft-07/schema#'\n      type: object\n      title: Elevator Co info screen usage event payload\n      required:\n        - header\n        - body\n      properties:\n        header:\n          additionalProperties: false\n          type: object\n          required:\n            - topic\n            - timestamp\n          properties:\n            topic:\n              type: string\n            timestamp:\n              type: string\n        body:\n          additionalProperties: false\n          type: object\n          required:\n            - num_sessions_last_hour\n            - avg_clicks_per_session\n          properties:\n            num_sessions_last_hour:\n              type: integer\n            avg_clicks_per_session:\n              type: integer\n      $id: 'http://eventportal.solace.cloud/apim/elevator-co/usage/info-screen.json'\n  messages:\n    call-wait:\n      payload:\n        $ref: '#/components/schemas/call-wait'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n    journey:\n      payload:\n        $ref: '#/components/schemas/journey'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n    info-screen:\n      payload:\n        $ref: '#/components/schemas/info-screen'\n      schemaFormat: application/vnd.aai.asyncapi+json;version=2.0.0\n      contentType: application/json\n  parameters:\n    topic_elem:\n      schema:\n        type: string\nchannels:\n  'apim/elevator-co/data-product/V1/json/elevator/info-screen/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0\n      message:\n        $ref: '#/components/messages/info-screen'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\n  'apim/elevator-co/data-product/V1/json/elevator/journey/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0\n      message:\n        $ref: '#/components/messages/journey'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\n  'apim/elevator-co/data-product/V1/json/elevator/call-wait/{resource_org_id}/{resource_region_id}/{resource_sub_region_id}/{resource_site_id}/{resource_type}/{resource_id}':\n    subscribe:\n      bindings:\n        http:\n          bindingVersion: ‘0.1.0’\n          type: request\n          method: POST\n        mqtt:\n          qos: 1\n          retain: true\n          bindingVersion: 0.1.0      \n      message:\n        $ref: '#/components/messages/call-wait'\n    parameters:\n      resource_org_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_sub_region_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_site_id:\n        $ref: '#/components/parameters/topic_elem'\n      resource_type:\n        $ref: '#/components/parameters/topic_elem'\n      resource_id:\n        $ref: '#/components/parameters/topic_elem'\nasyncapi: 2.0.0\ninfo:\n  x-application-class: unspecified\n  title: usage\n  x-view: provider\n  version: 0.0.1\n"
		}
	]
}